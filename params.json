{"name":"Vim","tagline":"The Best IDE for RoR developers","body":"### Installation.\r\n1) clone repository\r\n```\r\ngit clone git@github.com:volodymyrpartytskyi/vim.git ~/.vim\r\n```\r\n2) create symlink for vimrc\r\n```\r\nln -s  ~/.vim/.vimrc ~/.vimrc\r\n```\r\n3) add Vundle, the plug-in manager for Vim\r\n```\r\ngit clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\r\n```\r\n4) start gvim and enter in console\r\n```\r\n:BundleInstall\r\n```\r\nThatâ€™s it!\r\n***\r\n\r\n### If you want start vim on the full window, please install.\r\n```\r\nsudo apt-get install ctags wmctrl\r\n```\r\n***\r\n\r\n### Warnings\r\nAfter start vim, please check your terminal. If you have got warnings in the terminal `Unable to create Ubuntu Menu Proxy: Timeout was reached` or `Trying to remove a child that does not believe we are it is parent.` please **add** in `~/.bashrc` the lines and **restart** the terminal\r\n```\r\nfunction gvim () { (/usr/bin/gvim -f \"$@\" &>/dev/null &) }\r\nalias gvim='UBUNTU_MENUPROXY= gvim'\r\n```\r\n***\r\n\r\n### Plugins\r\n**Vim**\r\n- [Endwise](http://www.vim.org/scripts/script.php?script_id=2386)\r\n > This is a simple plugin that helps to end certain structures automatically.  In Ruby, this means adding \"end\" after \"if\", \"do\", \"def\" and several other keywords.\r\n- [AutoClose](https://github.com/Townk/vim-autoclose)\r\n > This plugin was  born  as  a  personal  need  to  have some little special features from other editors into my preferred one. The Eclipse IDE editor has an auto-complete for  open-close  pair  of  characters  feature  that I always wanted into Vim.\r\n- [L9](http://www.vim.org/scripts/script.php?script_id=3252)\r\n > l9 is a Vim-script library, which provides some utility functions and commands for programming in Vim.\r\n- [Matchit](http://www.vim.org/scripts/script.php?script_id=39)\r\n > The matchit.vim script allows you to configure % to match more than just single characters.  You can match words and even regular expressions. Also, matching treats strings and comments (as recognized by the syntax highlighting mechanism) intelligently.\r\n- [Ragtag](http://www.vim.org/scripts/script.php?script_id=1896)\r\n > This plugin started out as a set of personal mappings, but there was enough enjoyment among those I shared it with for me to clean it up and release it.\r\n- [Comments](http://www.vim.org/scripts/script.php?script_id=1528)\r\n > Plugin to comment and un-comment lines in different source files in both normal and visual mode\r\n- [Surround](http://www.vim.org/scripts/script.php?script_id=1697)\r\n > Surround.vim is all about \"surroundings\": parentheses, brackets, quotes, XML tags, and more.  The plugin provides mappings to easily delete, change and add such surroundings in pairs.\r\n- [Bufexplorer](http://www.vim.org/scripts/script.php?script_id=42)\r\n > With bufexplorer, you can quickly and easily switch between buffers.\r\n- [Grep](http://www.vim.org/scripts/script.php?script_id=311)\r\n > The grep plugin integrates the grep, fgrep, egrep, and agrep tools with Vim and allows you to search for a pattern in one or more files and jump to them.\r\n- [Syntastic](http://www.vim.org/scripts/script.php?script_id=2736)\r\n > If syntax errors are detected, the user is notified and is happy because they didn't have to compile their code or execute their script to find them.\r\n- [SnipMate](http://www.vim.org/scripts/script.php?script_id=2540)\r\n > A snippet is a piece of often-typed text that you can insert into your document using a trigger word followed by a Tab. \r\n\r\n***\r\n**Navigations**\r\n- [Command-T](http://www.vim.org/scripts/script.php?script_id=3025)\r\n > The Command-T plug-in provides an extremely fast, intuitive mechanism for opening files with a minimal number of keystrokes. It's named \"Command-T\" because it is inspired by the \"Go to File\" window bound to Command-T in TextMate.\r\n- [FuzzyFinder](http://www.vim.org/scripts/script.php?script_id=1984)\r\n > Fast opening files\r\n- [Ctrlp](http://www.vim.org/scripts/script.php?script_id=3736)\r\n > Fuzzy file, buffer, mru, tag, ... finder with regexp support. \r\n- [Nerdtree](http://www.vim.org/scripts/script.php?script_id=1658)\r\n > The NERD tree : A tree explorer plugin for navigating the filesystem \r\n- [vim-rails](http://www.vim.org/scripts/script.php?script_id=1567)\r\n > Easy file navigation, enhanced syntax highlighting, and more.\r\n\r\n***\r\n**Syntax highlight**\r\n- [Vim-Slim](https://github.com/slim-template/vim-slim)\r\n- [Haml](https://github.com/tpope/vim-haml)\r\n- [vim-javascript](https://github.com/pangloss/vim-javascript)\r\n- [Cucumber](http://www.vim.org/scripts/script.php?script_id=2973)\r\n- [Markdown](http://www.vim.org/scripts/script.php?script_id=2882)\r\n- [Textile](http://www.vim.org/scripts/script.php?script_id=2305)\r\n- [Less](http://www.vim.org/scripts/script.php?script_id=3964)\r\n- [Coffee-script](http://www.vim.org/scripts/script.php?script_id=3590)\r\n\r\n***\r\n**Fast keys**\r\n- **Bufexplorer** > ``Ctrl + b``\r\n- **Comments** > comment ``Ctrl + c``, uncomment ``Ctrl + x``\r\n- **Grep** > ``Ctrl + f``\r\n- **Command-T** > ``Alt + Shift + i``\r\n- **Fuzzyfinder** > ``Alt + Shift + o``\r\n- **Ctrlp** > ``Ctrl + p``\r\n- **Nerdtree** > ``F2``, more functions ``Shift + s m``\r\n- **vim-rails** > Go to view ``gv``, model ``gm``, helper ``gh``, controller ``gc``, stylesheets ``gs``, javascript ``gj``\r\n- **SnipMate** > Snip name + ``Tab``\r\n- **Save file** > ``Ctrl + s``\r\n- **Select all** > ``Ctrl + a``\r\n- **Clearing highlighted search** > press ``Esc``\r\n- **Tabs** > New tab ``tt``, next tab ``Ctrl + Tab``, previous tab ``Shift + Tab``, close tab ``Ctrl + q``\r\n- **Move line** > up ``Alt + up``, down ``Alt + down``\r\n- **Sort css style** > press ``F3``\r\n- **_Saving a session is simple_** > press ``F6``. To open Vim with a saved session, call it with -S option.  Enter in terminal: ``$ gvim -S last.vim``\r\n\r\n***\r\nWhen you need to make changes to a system file, you can override the read-only permissions by typing `:w!!`, vim will ask for your sudo password and save your changes.\r\n\r\n[more commands...](http://www.tuxfiles.org/linuxhelp/vimcheat.html) |\r\n[how to use vim?](http://ru.najomi.org/vim) |\r\n[plugins](http://john2x.com/blog/my-vim-setup/)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}